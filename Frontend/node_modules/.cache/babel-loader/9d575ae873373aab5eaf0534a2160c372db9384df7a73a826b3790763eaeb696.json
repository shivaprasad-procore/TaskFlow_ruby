{"ast":null,"code":"var _jsxFileName = \"/Users/shivaprasad.hiremath/Desktop/rails_demo/Frontend/src/components/ActivityFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport APIService from '../services/api';\nimport './ActivityFeed.css';\n\n/**\n * ActivityFeed\n * - Renders a floating \"Comments\" button.\n * - Clicking it opens a slide-in sidebar from the right.\n * - Shows existing comments and lets users add a new one.\n * - Displays the time a comment was created (hh:mm AM/PM).\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ActivityFeed = ({\n  task\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loadingComments, setLoadingComments] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  // A safe way to read common API field variations\n  const normalizeComment = c => {\n    var _ref, _c$id;\n    return {\n      id: (_ref = (_c$id = c.id) !== null && _c$id !== void 0 ? _c$id : c._id) !== null && _ref !== void 0 ? _ref : `${c.userName || c.user_name || 'user'}-${c.created_at || c.create_at || c.createdAt || c.updated_at || Date.now()}`,\n      userName: c.userName || c.user_name || c.user || 'Unknown',\n      comment: c.comment || c.text || '',\n      createdAt: c.created_at || c.create_at || c.createdAt || c.created || null\n    };\n  };\n\n  // precomputed count for the button\n  const commentCount = useMemo(() => comments.length, [comments]);\n\n  // Load comments when:\n  // 1) the panel opens AND we have a task id\n  // 2) the task changes while panel is already open\n  useEffect(() => {\n    const shouldLoad = isOpen && task && task.id;\n    if (!shouldLoad) return;\n    setLoadingComments(true);\n    APIService.getCommentsForTask(task.id).then(response => {\n      if (response !== null && response !== void 0 && response.success) {\n        const list = Array.isArray(response.data) ? response.data : [];\n        setComments(list.map(normalizeComment));\n      }\n    }).finally(() => setLoadingComments(false));\n  }, [isOpen, task]);\n  const handlePostComment = async () => {\n    if (!newComment.trim()) return;\n    if (!(task !== null && task !== void 0 && task.assignee) || task.assignee === 'None') {\n      alert('Please select an Assignee for the task before commenting.');\n      return;\n    }\n    const commentData = {\n      userName: task.assignee,\n      comment: newComment.trim()\n    };\n    const response = await APIService.createComment(task.id, commentData);\n    if (response !== null && response !== void 0 && response.success) {\n      var _response$data, _response$data2;\n      // Ensure the newly created comment shows a created time even if the API doesn't return one\n      const normalized = normalizeComment({\n        ...(response.data || {}),\n        created_at: (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.created_at) || (response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.create_at) || new Date().toISOString()\n      });\n      setComments(prev => [...prev, normalized]);\n      setNewComment('');\n    } else {\n      alert(`Failed to post comment: ${(response === null || response === void 0 ? void 0 : response.error) || 'Unknown error'}`);\n    }\n  };\n  const formatCommentTime = dateString => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    // Time (shown) and full datetime (title/tooltip)\n    return {\n      timeOnly: date.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: true\n      }),\n      full: date.toLocaleString()\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"comments-toggle-btn\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": \"activity-feed-panel\",\n      onClick: () => setIsOpen(true),\n      title: \"Open comments\",\n      children: [\"\\uD83D\\uDCAC Comments\", commentCount ? ` (${commentCount})` : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      id: \"activity-feed-panel\",\n      className: `activity-feed-panel ${isOpen ? 'open' : ''}`,\n      \"aria-hidden\": !isOpen,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activity-feed-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close-panel-btn\",\n          onClick: () => setIsOpen(false),\n          \"aria-label\": \"Close comments panel\",\n          title: \"Close\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activity-feed-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-input-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"Add comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePostComment,\n            className: \"post-comment-btn\",\n            title: \"Post comment\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \">\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-list\",\n          children: [loadingComments ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"loading\",\n            children: \"Loading comments...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this) : comments.map(comment => {\n            const {\n              timeOnly,\n              full\n            } = formatCommentTime(comment.createdAt);\n            const initials = (comment.userName || '??').toString().trim().split(/\\s+/).map(w => w[0]).slice(0, 2).join('').toUpperCase();\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-avatar\",\n                \"aria-hidden\": \"true\",\n                children: initials || '??'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"comment-author\",\n                    children: comment.userName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"comment-time\",\n                    title: full,\n                    children: timeOnly\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"comment-text\",\n                  children: comment.comment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)]\n            }, comment.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this);\n          }), !loadingComments && comments.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"empty-state\",\n            children: \"No comments yet. Be the first to add one!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"activity-feed-backdrop\",\n      \"aria-label\": \"Close comments\",\n      onClick: () => setIsOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true);\n};\n_s(ActivityFeed, \"UeK2AIzA2FnMzdlWVfuQYsAEgMs=\");\n_c = ActivityFeed;\nexport default ActivityFeed;\nvar _c;\n$RefreshReg$(_c, \"ActivityFeed\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","APIService","jsxDEV","_jsxDEV","Fragment","_Fragment","ActivityFeed","task","_s","comments","setComments","newComment","setNewComment","loadingComments","setLoadingComments","isOpen","setIsOpen","normalizeComment","c","_ref","_c$id","id","_id","userName","user_name","created_at","create_at","createdAt","updated_at","Date","now","user","comment","text","created","commentCount","length","shouldLoad","getCommentsForTask","then","response","success","list","Array","isArray","data","map","finally","handlePostComment","trim","assignee","alert","commentData","createComment","_response$data","_response$data2","normalized","toISOString","prev","error","formatCommentTime","dateString","date","timeOnly","toLocaleTimeString","hour","minute","hour12","full","toLocaleString","children","type","className","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","initials","toString","split","w","slice","join","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/shivaprasad.hiremath/Desktop/rails_demo/Frontend/src/components/ActivityFeed.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport APIService from '../services/api';\nimport './ActivityFeed.css';\n\n/**\n * ActivityFeed\n * - Renders a floating \"Comments\" button.\n * - Clicking it opens a slide-in sidebar from the right.\n * - Shows existing comments and lets users add a new one.\n * - Displays the time a comment was created (hh:mm AM/PM).\n */\nconst ActivityFeed = ({ task }) => {\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loadingComments, setLoadingComments] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  // A safe way to read common API field variations\n  const normalizeComment = (c) => ({\n    id: c.id ?? c._id ?? `${(c.userName || c.user_name || 'user')}-${(c.created_at || c.create_at || c.createdAt || c.updated_at || Date.now())}`,\n    userName: c.userName || c.user_name || c.user || 'Unknown',\n    comment: c.comment || c.text || '',\n    createdAt: c.created_at || c.create_at || c.createdAt || c.created || null,\n  });\n\n  // precomputed count for the button\n  const commentCount = useMemo(() => comments.length, [comments]);\n\n  // Load comments when:\n  // 1) the panel opens AND we have a task id\n  // 2) the task changes while panel is already open\n  useEffect(() => {\n    const shouldLoad = isOpen && task && task.id;\n    if (!shouldLoad) return;\n\n    setLoadingComments(true);\n    APIService.getCommentsForTask(task.id).then((response) => {\n      if (response?.success) {\n        const list = Array.isArray(response.data) ? response.data : [];\n        setComments(list.map(normalizeComment));\n      }\n    }).finally(() => setLoadingComments(false));\n  }, [isOpen, task]);\n\n  const handlePostComment = async () => {\n    if (!newComment.trim()) return;\n\n    if (!task?.assignee || task.assignee === 'None') {\n      alert('Please select an Assignee for the task before commenting.');\n      return;\n    }\n\n    const commentData = {\n      userName: task.assignee,\n      comment: newComment.trim(),\n    };\n\n    const response = await APIService.createComment(task.id, commentData);\n    if (response?.success) {\n      // Ensure the newly created comment shows a created time even if the API doesn't return one\n      const normalized = normalizeComment({\n        ...(response.data || {}),\n        created_at: response?.data?.created_at || response?.data?.create_at || new Date().toISOString(),\n      });\n      setComments((prev) => [...prev, normalized]);\n      setNewComment('');\n    } else {\n      alert(`Failed to post comment: ${response?.error || 'Unknown error'}`);\n    }\n  };\n\n  const formatCommentTime = (dateString) => {\n    if (!dateString) return '';\n    const date = new Date(dateString);\n    // Time (shown) and full datetime (title/tooltip)\n    return {\n      timeOnly: date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit', hour12: true }),\n      full: date.toLocaleString(),\n    };\n  };\n\n  return (\n    <>\n      {/* Floating toggle button */}\n      <button\n        type=\"button\"\n        className=\"comments-toggle-btn\"\n        aria-expanded={isOpen}\n        aria-controls=\"activity-feed-panel\"\n        onClick={() => setIsOpen(true)}\n        title=\"Open comments\"\n      >\n        💬 Comments{commentCount ? ` (${commentCount})` : ''}\n      </button>\n\n      {/* Slide-in panel */}\n      <aside\n        id=\"activity-feed-panel\"\n        className={`activity-feed-panel ${isOpen ? 'open' : ''}`}\n        aria-hidden={!isOpen}\n      >\n        <div className=\"activity-feed-header\">\n          <h4>Comments</h4>\n          <button\n            type=\"button\"\n            className=\"close-panel-btn\"\n            onClick={() => setIsOpen(false)}\n            aria-label=\"Close comments panel\"\n            title=\"Close\"\n          >\n            ×\n          </button>\n        </div>\n\n        <div className=\"activity-feed-body\">\n          <div className=\"comment-input-area\">\n            <textarea\n              value={newComment}\n              onChange={(e) => setNewComment(e.target.value)}\n              placeholder=\"Add comment\"\n            />\n            <button onClick={handlePostComment} className=\"post-comment-btn\" title=\"Post comment\">\n              <span>&gt;</span>\n            </button>\n          </div>\n\n          <div className=\"comment-list\">\n            {loadingComments ? (\n              <p className=\"loading\">Loading comments...</p>\n            ) : (\n              comments.map((comment) => {\n                const { timeOnly, full } = formatCommentTime(comment.createdAt);\n                const initials = (comment.userName || '??')\n                  .toString()\n                  .trim()\n                  .split(/\\s+/)\n                  .map((w) => w[0])\n                  .slice(0, 2)\n                  .join('')\n                  .toUpperCase();\n\n                return (\n                  <div key={comment.id} className=\"comment-item\">\n                    <div className=\"comment-avatar\" aria-hidden=\"true\">{initials || '??'}</div>\n                    <div className=\"comment-content\">\n                      <div className=\"comment-header\">\n                        <span className=\"comment-author\">{comment.userName}</span>\n                        <span className=\"comment-time\" title={full}>{timeOnly}</span>\n                      </div>\n                      <p className=\"comment-text\">{comment.comment}</p>\n                    </div>\n                  </div>\n                );\n              })\n            )}\n            {!loadingComments && comments.length === 0 && (\n              <p className=\"empty-state\">No comments yet. Be the first to add one!</p>\n            )}\n          </div>\n        </div>\n      </aside>\n\n      {/* Backdrop to close panel on click */}\n      {isOpen && <button className=\"activity-feed-backdrop\" aria-label=\"Close comments\" onClick={() => setIsOpen(false)} />}\n    </>\n  );\n};\n\nexport default ActivityFeed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}